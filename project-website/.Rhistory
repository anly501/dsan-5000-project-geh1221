setwd("~/Desktop/DSAN_5000/dsan-5000-project-geh1221/project-website")
library(tidyverse)
regular_data <- read.csv("../data/01-modified-data/skaters_clean.csv")
pp_data <- read.csv("../data/01-modified-data/skaters_pp.csv")
summary_data_regular <- regular_data %>%
subset(select=c(expectedGoals,corsi,shotAttempts,points,goals,faceoffsWon,takeways,giveaways,hits)) %>%
summary()
summary_data_regular
summary(pp_data$icetime)
#remove bottom 25% of players by ice time
pp_data <- pp_data %>%
filter(icetime > 414)
#summarize all metrics
summary_data_pp <- pp_data %>%
subset(select=c(expectedGoals,corsi,shotAttempts,points,goals,faceoffsWon,takeways,giveaways,hits)) %>%
summary()
summary_data_pp
norm_regular_data<-mutate(regular_data, expectedGoals=expectedGoals/mean(expectedGoals), corsi=corsi/mean(corsi), shotAttempts=shotAttempts/mean(shotAttempts), points=points/mean(points), goals=goals/mean(goals), faceoffsWon=faceoffsWon/mean(faceoffsWon),takeways=takeways/mean(takeways),giveaways=giveaways/mean(giveaways),hits=hits/mean(hits))
norm_pp_data<-mutate(pp_data, expectedGoals=expectedGoals/mean(expectedGoals), corsi=corsi/mean(corsi), shotAttempts=shotAttempts/mean(shotAttempts), points=points/mean(points), goals=goals/mean(goals), faceoffsWon=faceoffsWon/mean(faceoffsWon),takeways=takeways/mean(takeways),giveaways=giveaways/mean(giveaways),hits=hits/mean(hits))
norm_regular_data<-norm_regular_data %>%
subset(select=c(ID, name, team, expectedGoals,corsi,shotAttempts,points,goals,faceoffsWon,takeways,giveaways,hits))
sapply(norm_regular_data, function(x) sum(x > 3))
#faceoffs won has a lot of outliers
norm_pp_data<-norm_pp_data %>%
subset(select=c(ID, name, team, expectedGoals,corsi,shotAttempts,points,goals,faceoffsWon,takeways,giveaways,hits))
sapply(norm_pp_data, function(x) sum(x > 3))
#most metrics have larger number of outliers for powerplays than regular play
#join pp data with regular data
colnames(norm_pp_data) <- c("ID","name","team","expectedGoals_pp","corsi_pp","shotAttempts_pp","points_pp","goals_pp","faceoffsWon_pp","takeaways_pp","giveaways_pp","hits_pp")
df.1 <- left_join(norm_pp_data, norm_regular_data, by="ID")
#compare metric values between regular play and powerplays for all players
library(ggplot2)
library(gridExtra)
g1<-ggplot(data=df.1) + geom_point(aes(x=expectedGoals, y=expectedGoals_pp), color="purple") + theme_bw() + labs(title="Expected Goals Percentage", x="Regular Play", y="Power Play")
g2<-ggplot(data=df.1) + geom_point(aes(x=corsi, y=corsi_pp), color="purple") + theme_bw() + labs(title="Corsi Percentage", x="Regular Play", y="Power Play")
g3<-ggplot(data=df.1) + geom_point(aes(x=shotAttempts, y= shotAttempts_pp), color="purple") + theme_bw() + labs(title="Shot Attempts", x="Regular Play", y="Power Play")
g4<-ggplot(data=df.1) + geom_point(aes(x=points, y=points_pp), color="purple") + theme_bw() + labs(title="Points", x="Regular Play", y="Power Play")
g5<-ggplot(data=df.1) + geom_point(aes(x=goals, y=goals_pp), color="purple") + theme_bw() + labs(title="Goals", x="Regular Play", y="Power Play")
g6<-ggplot(data=df.1) + geom_point(aes(x=faceoffsWon, y=faceoffsWon_pp), color="purple") + theme_bw() + labs(title="Faceoffs Won", x="Regular Play", y="Power Play")
g7<-ggplot(data=df.1) + geom_point(aes(x=takeways, y=takeaways_pp), color="purple") + theme_bw() + labs(title="Takeaways", x="Regular Play", y="Power Play")
g8<-ggplot(data=df.1) + geom_point(aes(x=giveaways, y=giveaways_pp), color="purple") + theme_bw() + labs(title="Giveaways", x="Regular Play", y="Power Play")
g9<-ggplot(data=df.1) + geom_point(aes(x=hits, y=hits_pp), color="purple") + theme_bw() + labs(title="Hits", x="Regular Play", y="Power Play")
grid.arrange(g1,g2,g3,g4,g5,g6,g7,g8,g9, ncol=3)
library(reshape2)
df.2 <- subset(df.1, select=-c(ID, name.x, team.x,name.y,team.y))
corr_matrix <- round(cor(df.2),2)
corr_matrix <- melt(corr_matrix)
ggplot(data = corr_matrix, aes(x=Var1, y=Var2, fill=value)) + geom_tile() + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
#load team data and team record data
team_data <- read.csv("../data/01-modified-data/team_record_clean.csv")
#compare powerplay success to overall season success
ggplot(data=team_data) + geom_point(aes(x=ppPercent, y=points), color="purple") + theme_bw() + labs(title="Regular Season Success Based on Power Play Success", x="Power Play Percent", y="Team Points")
ggplot(data=team_data) + geom_point(aes(x=ppGoals, y=points), color="purple") + theme_bw() + labs(title="Regular Season Success Based on Power Play Goals", x="Power Play Goals", y="Team Points")
setwd("~/Desktop/DSAN_5000/dsan-5000-project-geh1221/codes/02-data-cleaning")
#load data
data <- read.csv("../../data/00-raw-data/team_data.csv")
#load data
data <- read.csv("../../data/00-raw-data/team_data.csv")
setwd("~/Desktop/DSAN_5000/dsan-5000-project-geh1221/codes/02-data-cleaning")
#load data
data <- read.csv("../../data/00-raw-data/team_data.csv")
#load data
data2022 <- read.csv("../../data/00-raw-data/team_data_2022.csv")
View(data2022)
setwd("~/Desktop/DSAN_5000/dsan-5000-project-geh1221/project-website")
#load data
library(tidyverse)
data <- read.csv("/data/00-raw-data/skaters.csv")
data <- read.csv("../data/00-raw-data/skaters.csv")
#check for missing values
sum(is.na(data))
#check for missing values
sum(is.na(data))
View(data)
View(data)
setwd("~/Desktop/DSAN_5000/dsan-5000-project-geh1221/project-website")
#load data
library(tidyverse)
data <- read.csv("../data/00-raw-data/team_records.csv")
#check for missing values
sum(is.na(data))
#remove unnecessary columns and change column names
data <- subset(data, select=c(X,PTS, PP, PPO, PP., PPA, PPOA, PK.))
colnames(data) <- c("team","points", "ppGoals","ppOpps","ppPercent","pkGoalsAgainst","pkOppsAgainst","pkPercent")
#change team names to match other datasets
data$team <- c("BOS","CAR","NJD","VGK","TOR","COL","EDM","DAL","NYR","LAK","MIN","SEA","TBL","WPG","CGY","NYI","FLA","NSH","BUF","PIT","OTT","VAN","STL","WSH","DET","PHI","ARI","MTL","SJS","CHI","CBJ","ANA")
#save cleaned data
write.csv(data, "../data/01-modified-data/team_record_clean.csv")
#load data
data2022 <- read.csv("../data/00-raw-data/team_data_2022.csv")
data2021 <- read.csv("../data/00-raw-data/team_data_2021.csv")
data2020 <- read.csv("../data/00-raw-data/team_data_2020.csv")
data2018 <- read.csv("../data/00-raw-data/team_data_2018.csv")
library(tidyverse)
#check for missing values
sum(is.na(data2022))
sum(is.na(data2021))
sum(is.na(data2020))
sum(is.na(data2018))
#remove unnecessary columns and change column names
data2022 <- subset(data2022, select=c(team,situation, xGoalsPercentage,corsiPercentage,shotAttemptsFor,goalsFor,faceOffsWonFor,takeawaysFor,giveawaysFor,hitsFor,team,situation))
data2021 <- subset(data2021, select=c(team,situation, xGoalsPercentage,corsiPercentage,shotAttemptsFor,goalsFor,faceOffsWonFor,takeawaysFor,giveawaysFor,hitsFor,team,situation))
data2020 <- subset(data2020, select=c(team,situation, xGoalsPercentage,corsiPercentage,shotAttemptsFor,goalsFor,faceOffsWonFor,takeawaysFor,giveawaysFor,hitsFor,team,situation))
data2018 <- subset(data2018, select=c(team,situation, xGoalsPercentage,corsiPercentage,shotAttemptsFor,goalsFor,faceOffsWonFor,takeawaysFor,giveawaysFor,hitsFor,team,situation))
#filter non powerplay data
data2022<- data2022 %>% filter(situation=="5on4")
data2021<- data2021 %>% filter(situation=="5on4")
data2020<- data2020 %>% filter(situation=="5on4")
data2018<- data2018 %>% filter(situation=="5on4")
#add variable for playoff teams
playoff_teams_2018 <- c("T.B","BOS","TOR","WSH","NYI","PIT","CAR","CBJ","NSH","WPG","STL","DAL","COL","CGY","S.J","VGK")
playoff_teams_2020 <- c("CAR","FLA","T.B","NSH","PIT","WSH","BOS","NYI","TOR","EDM","WPG","MTL","COL","VGK","MIN","STL")
playoff_teams_2021 <- c("FLA","TOR","TBL","BOS","CAR","NYR","PIT","WSH","COL","MIN","STL","DAL","NSH","CGY","EDM","LAK")
playoff_teams_2022 <- c("BOS","TOR","TBL","FLA","CAR","NJD","NYR","NYI","COL","DAL","MIN","WPG","VGK","EDM","LAK","SEA")
data2022$playoff <- NA
data2021$playoff <- NA
data2020$playoff <- NA
data2018$playoff <- NA
data2022<-data2022 %>% mutate(playoff = ifelse(team %in% playoff_teams_2022,1,0))
data2021<-data2021 %>% mutate(playoff = ifelse(team %in% playoff_teams_2021,1,0))
data2020<-data2020 %>% mutate(playoff = ifelse(team %in% playoff_teams_2020,1,0))
data2018<-data2018 %>% mutate(playoff = ifelse(team %in% playoff_teams_2018,1,0))
#combine datasets
data <- rbind(data2022, data2021, data2020, data2018)
#remove non-numerical data
data <- subset(data, select=-c(team,situation,team.1,situation.1))
#normalize numerical data
data<-mutate(data, xGoalsPercentage=xGoalsPercentage/mean(xGoalsPercentage), corsiPercentage=corsiPercentage/mean(corsiPercentage), shotAttemptsFor=shotAttemptsFor/mean(shotAttemptsFor), goalsFor=goalsFor/mean(goalsFor), faceOffsWonFor=faceOffsWonFor/mean(faceOffsWonFor), takeawaysFor=takeawaysFor/mean(takeawaysFor),giveawaysFor=giveawaysFor/mean(giveawaysFor),hitsFor=hitsFor/mean(hitsFor))
#save cleaned data
write.csv(data, "../data/01-modified-data/team_pp_data_clean.csv")
#load data
data2022 <- read.csv("../data/00-raw-data/team_data_2022.csv")
data2021 <- read.csv("../data/00-raw-data/team_data_2021.csv")
data2020 <- read.csv("../data/00-raw-data/team_data_2020.csv")
data2018 <- read.csv("../data/00-raw-data/team_data_2018.csv")
library(tidyverse)
#check for missing values
sum(is.na(data2022))
sum(is.na(data2021))
sum(is.na(data2020))
sum(is.na(data2018))
#remove unnecessary columns and change column names
data2022 <- subset(data2022, select=c(team,situation, xGoalsPercentage,corsiPercentage,shotAttemptsFor,goalsFor,faceOffsWonFor,takeawaysFor,giveawaysFor,hitsFor,team,situation))
data2021 <- subset(data2021, select=c(team,situation, xGoalsPercentage,corsiPercentage,shotAttemptsFor,goalsFor,faceOffsWonFor,takeawaysFor,giveawaysFor,hitsFor,team,situation))
data2020 <- subset(data2020, select=c(team,situation, xGoalsPercentage,corsiPercentage,shotAttemptsFor,goalsFor,faceOffsWonFor,takeawaysFor,giveawaysFor,hitsFor,team,situation))
data2018 <- subset(data2018, select=c(team,situation, xGoalsPercentage,corsiPercentage,shotAttemptsFor,goalsFor,faceOffsWonFor,takeawaysFor,giveawaysFor,hitsFor,team,situation))
#filter non regular play data
data2022<- data2022 %>% filter(situation=="5on5")
data2021<- data2021 %>% filter(situation=="5on5")
data2020<- data2020 %>% filter(situation=="5on5")
data2018<- data2018 %>% filter(situation=="5on5")
#add variable for playoff teams
playoff_teams_2018 <- c("T.B","BOS","TOR","WSH","NYI","PIT","CAR","CBJ","NSH","WPG","STL","DAL","COL","CGY","S.J","VGK")
playoff_teams_2020 <- c("CAR","FLA","T.B","NSH","PIT","WSH","BOS","NYI","TOR","EDM","WPG","MTL","COL","VGK","MIN","STL")
playoff_teams_2021 <- c("FLA","TOR","TBL","BOS","CAR","NYR","PIT","WSH","COL","MIN","STL","DAL","NSH","CGY","EDM","LAK")
playoff_teams_2022 <- c("BOS","TOR","TBL","FLA","CAR","NJD","NYR","NYI","COL","DAL","MIN","WPG","VGK","EDM","LAK","SEA")
data2022$playoff <- NA
data2021$playoff <- NA
data2020$playoff <- NA
data2018$playoff <- NA
data2022<-data2022 %>% mutate(playoff = ifelse(team %in% playoff_teams_2022,1,0))
data2021<-data2021 %>% mutate(playoff = ifelse(team %in% playoff_teams_2021,1,0))
data2020<-data2020 %>% mutate(playoff = ifelse(team %in% playoff_teams_2020,1,0))
data2018<-data2018 %>% mutate(playoff = ifelse(team %in% playoff_teams_2018,1,0))
#combine datasets
data <- rbind(data2022, data2021, data2020, data2018)
#remove non-numerical data
data <- subset(data, select=-c(team,situation,team.1,situation.1))
#normalize numerical data
data<-mutate(data, xGoalsPercentage=xGoalsPercentage/mean(xGoalsPercentage), corsiPercentage=corsiPercentage/mean(corsiPercentage), shotAttemptsFor=shotAttemptsFor/mean(shotAttemptsFor), goalsFor=goalsFor/mean(goalsFor), faceOffsWonFor=faceOffsWonFor/mean(faceOffsWonFor), takeawaysFor=takeawaysFor/mean(takeawaysFor),giveawaysFor=giveawaysFor/mean(giveawaysFor),hitsFor=hitsFor/mean(hitsFor))
#save cleaned data
write.csv(data, "../data/01-modified-data/team_regular_data_clean.csv")
#load data
data2022 <- read.csv("../data/00-raw-data/team_data_2022.csv")
library(tidyverse)
#check for missing values
sum(is.na(data2022))
#remove unnecessary columns and change column names
data2022 <- subset(data2022, select=c(team,situation, xGoalsPercentage,corsiPercentage,shotAttemptsFor,xGoalsFor,faceOffsWonFor,takeawaysFor,giveawaysFor,hitsFor,team,situation))
#filter non powerplay data
data2022<- data2022 %>% filter(situation=="5on4")
#add variable for points bracket
points_bracket <- c("mid_tier","over100","under80","under80","mid_tier","mid_tier","over100","mid_tier","mid_tier","over100","mid_tier","under80","mid_tier","mid_tier","over100","over100","over100","over100","under80","over100","over100","under80","under80","under80","over100","mid_tier","mid_tier","over100","over100","mid_tier","mid_tier","mid_tier")
data <- data2022 %>% mutate(points_cat=points_bracket)
#remove non-numerical data
data <- subset(data, select=-c(team,situation,team.1,situation.1))
#normalize numerical data
data<-mutate(data, xGoalsPercentage=xGoalsPercentage/mean(xGoalsPercentage), corsiPercentage=corsiPercentage/mean(corsiPercentage), shotAttemptsFor=shotAttemptsFor/mean(shotAttemptsFor), xGoalsFor=xGoalsFor/mean(xGoalsFor), faceOffsWonFor=faceOffsWonFor/mean(faceOffsWonFor), takeawaysFor=takeawaysFor/mean(takeawaysFor),giveawaysFor=giveawaysFor/mean(giveawaysFor),hitsFor=hitsFor/mean(hitsFor))
#save cleaned data
write.csv(data, "../data/01-modified-data/team_pp_data_point_bracket_clean.csv")
#load data
library(tidyverse)
data <- read.csv("../data/00-raw-data/skaters.csv")
#check for missing values
sum(is.na(data))
#remove unnecessary columns and rename columns
data <- subset(data, select=c(playerId,season,name,team,position,situation,games_played,icetime,shifts,iceTimeRank,onIce_xGoalsPercentage,onIce_corsiPercentage,I_F_shotAttempts,I_F_points,I_F_goals,I_F_faceOffsWon,I_F_takeaways,I_F_giveaways,I_F_hits))
colnames(data) <- c("ID","season","name","team","position","situation","games_played","icetime","shifts","iceTimeRank","expectedGoals","corsi","shotAttempts","points","goals","faceoffsWon","takeways","giveaways","hits")
#remove players who played in fewer than half of the games in the season
data <- filter(data, games_played>=41)
#separate dataframes for regular play, power plays, and penalty kills
regular_player_data <- filter(data, situation=="5on5")
pp_player_data <- filter(data, situation=="5on4")
#save cleaned data
write.csv(regular_player_data, "../data/01-modified-data/skaters_clean.csv")
write.csv(pp_player_data, ".../data/01-modified-data/skaters_pp.csv")
write.csv(pp_player_data, ".../data/01-modified-data/skaters_pp.csv")
#save cleaned data
write.csv(regular_player_data, "../data/01-modified-data/skaters_clean.csv")
reticulate::repl_python()
