x<- runif(1,min=0,max=1)
for (i in 1:20) {
x <- runif(1,min=0,max=1+x)
x
}
x<- runif(1,min=0,max=1)
for (i in 1:20) {
x <- runif(1,min=0,max=1+x)
print(x)
}
runif(1,min=0,max=1)
x<- 0.3664271
for (i in 1:20) {
x <- runif(1,min=0,max=1+x)
print(x)
}
x<- runif(1,min=0,max=1)
for (i in 1:20) {
x <- runif(1,min=0,max=1+x)
print(x)
}
x<- runif(1,min=0,max=1)
for (i in 1:20) {
x <- runif(1,min=0,max=1+x)
return(x)
}
new_function <- function() {
x<- runif(1,min=0,max=1)
for (i in 1:20) {
x <- runif(1,min=0,max=1+x)
return(x)
}
}
mc_sim <- replicate(10000, new_function())
mean(mc_sim)
hist(mc_sim)
hist(mc_sim)
hist(mc_sim)
hist(mc_sim)
hist(mc_sim)
?dgamma
hist(mc_sim)
hist(mc_sim)
dgamma(12,4,scale=2)
x <- [0:12]
x <- 0:12
r <-4
p<-2
prob <- sum(dgamma(x,r,scale=p))
x <- 0:12
r <-4
p<-2
prob <- sum(dgamma(x,r,scale=p))
prob
hist(dgamma(x,r,scale=p))
hist(pgamma(x, r, scale=p))
x <- 0:12
r <-4
p<-2
prob <- sum(dgamma(x,r,scale=p))
prob
x <- 0:4.99
r <-4
p<-2
prob <- 1-sum(dgamma(x,r,scale=p))
prob
sum(dgamma(x,r,scale=p))
sum(dgamma(x,r,scale=p))
sum(dgamma(5:12,4,scale=2))
x <- 7:9
r <-4
p <-2
prob <- sum(dgamma(x,r,scale=p))
prob
qgamma(0.95,r,scale=p)
prob <- 0.95
r <-4
p <-2
z<-qgamma(prob,r,scale=p)
z
dgamma(15.5,4,scale=2)
sum(dgamma(0:15.5,4,scale=2))
?dbinom
?dnorm
#np and n(1-p) both large
n <- 1000
p <- 50
np
n*p
n*(1-p)
#np and n(1-p) both large
n <- 1000
p <- 0.5
n*(1-p)
#np and n(1-p) both large
n <- 1000
p <- 0.5
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
lines(ecdf_bin, type=s, col="blue")
lines(ecdf_bin, type='s', col="blue")
plot(ecdf_norm, verticals=TRUE)
lines(ecdf_bin, type='s', col="blue")
lines(ecdf_bin, col="blue")
plot,new()
plot.new()
lines(ecdf_bin, col="blue")
plot(ecdf_norm, verticals=TRUE)
lines(ecdf_bin, col="blue")
lines(ecdf_bin, col="blue")
plot.new()
lines(ecdf_bin, col="blue")
?lines
plot(ecdf_bin, col="blue")
plot(ecdf_norm, verticals=TRUE, add=TRUE)
plot(ecdf_norm, verticals=TRUE, add=TRUE)
plot(ecdf_bin, col="blue")
plot(ecdf_norm, verticals=TRUE, add=TRUE)
plot(ecdf_bin, col="blue")
plot(ecdf_norm, add=TRUE)
plot(ecdf_bin, col="blue")
t <- seq(0,10,by=0.01)
lines(t,ecdf_bin(t))
plot.new()
lines(t,ecdf_bin(t))
lines(t,ecdf_bin(t),type='s')
t <- seq(0,10,by=0.01)
plot.new()
lines(t,ecdf_bin(t),type='s')
plot.new()
lines(t,ecdf_bin(t),type='s')
plot.new()
plot(ecdf_norm, add=TRUE)
t <- seq(0,10,by=0.01)
plot(ecdf_norm, add=TRUE)
t <- seq(0,10,by=0.01)
plot(t,ecdf_norm(t))
lines(t,ecdf_bin(t),type='s')
#np and n(1-p) both large
n <- 1000
p <- 0.5
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,10,by=0.01)
plot(t,ecdf_norm(t))
lines(t,ecdf_bin(t),type='s')
#np and n(1-p) both large
n <- 1000
p <- 0.5
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,1,by=0.01)
plot(t,ecdf_norm(t))
lines(t,ecdf_bin(t),type='s')
#np and n(1-p) both large
n <- 1000
p <- 0.5
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,1,by=0.01)
plot(t,ecdf_norm(t),col="blue")
lines(t,ecdf_bin(t),type='s', col="red")
#np and n(1-p) both large
n <- 1000
p <- 0.5
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,100,by=0.01)
plot(t,ecdf_norm(t),col="blue")
lines(t,ecdf_bin(t),type='s', col="red")
#np and n(1-p) both large
n <- 1000
p <- 0.5
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,0.5,by=0.01)
plot(t,ecdf_norm(t),col="blue")
lines(t,ecdf_bin(t),type='s', col="red")
#np and n(1-p) both large
n <- 1000
p <- 0.5
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,0.5,by=0.01)
plot(t,ecdf_norm(t),col="blue", ylim=c(-0.05,0.05))
lines(t,ecdf_bin(t),type='s', col="red")
library(openintro)
install.packages("openintro")
library(openintro)
df <- data(exam_grades)
data<- data(exam_grades)
data
data(exam_grades)
force(exam_grades)
View(exam_grades)
sum(is.na(data))
View(exam_grades)
sum(is.na(exam_grades))
exam_grades <- na.omit(exam_grades)
sum(is.na(exam_grades))
qqnorm(exam_grades$exam1))
qqnorm(exam_grades$exam1)
library(openintro)
data(exam_grades)
sum(is.na(exam_grades))
exam_grades <- na.omit(exam_grades)
qqnorm(exam_grades$exam1)
qqnorm(exam_grades$exam2)
qqnorm(exam_grades$exam3)
qqnorm(exam_grades$course_grade)
qqline(exam_grades$exam1)
qqnorm(exam_grades$exam1) + qqline(exam_grades$exam1)
library(openintro)
data(exam_grades)
sum(is.na(exam_grades))
exam_grades <- na.omit(exam_grades)
qqnorm(exam_grades$exam1)
qqline(exam_grades$exam1)
library(openintro)
data(exam_grades)
sum(is.na(exam_grades))
exam_grades <- na.omit(exam_grades)
qqnorm(exam_grades$exam1)
qqline(exam_grades$exam1, col="red")
?qqnorm
library(openintro)
data(exam_grades)
sum(is.na(exam_grades))
exam_grades <- na.omit(exam_grades)
qqnorm(exam_grades$exam1, main="Exam 1")
qqline(exam_grades$exam1, col="red")
qqnorm(exam_grades$exam2, main="Exam 2")
qqline(exam_grades$exam2, col="red")
qqnorm(exam_grades$exam3, main="Exam 3")
qqline(exam_grades$exam3, col="red")
qqnorm(exam_grades$course_grade, main="Course Grade")
qqline(exam_grades$course_grade, col="red")
#np and n(1-p) both large
n <- 1000
p <- 0.5
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,0.5,by=0.01)
plot(t,ecdf_norm(t),col="blue", ylim=c(-0.05,0.05))
lines(t,ecdf_bin(t),type='s', col="red")
#np large and n(1-p)<10
n <- 1000
#np large and n(1-p)<10
n <- 100
p <- 0.8
n*(1-p)
p <- 0.95
n*(1-p)
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
#np large and n(1-p)<10
n <- 100
p <- 0.95
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,0.5,by=0.01)
plot(t,ecdf_norm(t),col="blue", ylim=c(-0.05,0.05))
lines(t,ecdf_bin(t),type='s', col="red")
#np <10 and n(1-p) large
n <- 100
p <- 0.0.5
#np <10 and n(1-p) large
n <- 100
p <- 0.05
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,0.5,by=0.01)
plot(t,ecdf_norm(t),col="blue", ylim=c(-0.05,0.05))
lines(t,ecdf_bin(t),type='s', col="red")
#np large and n(1-p)<10
n <- 100
p <- 0.95
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,0.5,by=0.01)
plot(t,ecdf_norm(t),col="blue", ylim=c(-0.05,0.05))
lines(t,ecdf_bin(t),type='s', col="red")
#np and n(1-p) both large
n <- 1000
p <- 0.5
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,0.5,by=0.01)
plot(t,ecdf_norm(t),col="blue", ylim=c(-0.05,0.05))
lines(t,ecdf_bin(t),type='s', col="red")
#np <10 and n(1-p) large
n <- 100
p <- 0.05
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,10,by=0.5)
plot(t,ecdf_norm(t),col="blue", ylim=c(-0.05,0.05))
lines(t,ecdf_bin(t),type='s', col="red")
#np <10 and n(1-p) large
n <- 100
p <- 0.05
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,10,by=0.5)
plot(t,ecdf_norm(t),col="blue")
lines(t,ecdf_bin(t),type='s', col="red")
#np <10 and n(1-p) large
n <- 100
p <- 0.05
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,10,by=0.5)
lines(t,ecdf_norm(t),col="blue")
#np <10 and n(1-p) large
n <- 100
p <- 0.05
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,10,by=0.5)
plot(t,ecdf_norm(t),col="blue")
lines(t,ecdf_bin(t),type='s', col="red")
#np and n(1-p) both large
n <- 1000
p <- 0.5
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,10,by=0.5)
plot(t,ecdf_norm(t),col="blue", ylim=c(-0.05,0.05))
lines(t,ecdf_bin(t),type='s', col="red")
#np and n(1-p) both large
n <- 1000
p <- 0.5
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,10,by=0.5)
plot(t,ecdf_norm(t),col="blue")
lines(t,ecdf_bin(t),type='s', col="red")
#np large and n(1-p)<10
n <- 100
p <- 0.95
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,10,by=0.5)
plot(t,ecdf_norm(t),col="blue")
lines(t,ecdf_bin(t),type='s', col="red")
#np <10 and n(1-p) large
n <- 100
p <- 0.05
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,10,by=0.5)
plot(t,ecdf_norm(t),col="blue")
lines(t,ecdf_bin(t),type='s', col="red")
#np and n(1-p) both large
n <- 100
p <- 0.5
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,10,by=0.5)
plot(t,ecdf_norm(t),col="blue")
lines(t,ecdf_bin(t),type='s', col="red")
#np large and n(1-p)<10
n <- 100
p <- 0.95
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,10,by=0.5)
plot(t,ecdf_norm(t),col="blue")
lines(t,ecdf_bin(t),type='s', col="red")
#np <10 and n(1-p) large
n <- 100
p <- 0.05
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,10,by=0.5)
plot(t,ecdf_norm(t),col="blue")
lines(t,ecdf_bin(t),type='s', col="red")
#np <10 and n(1-p) large
n <- 100
p <- 0.05
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,10,by=0.5)
plot(t,ecdf_norm,col="blue")
#np <10 and n(1-p) large
n <- 100
p <- 0.05
binomial <- rbinom(10000,n,p)
normal <- rnorm(10000, mean=n*p, sd=sqrt(n*p*(1-p)))
ecdf_bin <- ecdf(binomial)
ecdf_norm <- ecdf(normal)
t <- seq(0,10,by=0.5)
plot(t,ecdf_norm(t),col="blue")
lines(t,ecdf_bin(t),type='s', col="red")
x1<-rnorm(100000)
u1<-ecdf(x1)
x1<-rnorm(100000)
u1<-ecdf(x1)
plot(u1)
x1<-rnorm(100000)
plot.ecdf(x1)
x1<-rnorm(100000)
plot.ecdf(x1)
u1<-ecdf(x1)
u1
ecdf1<-ecdf(x1)
u1<-sample(ecdf1, 10000, replace=FALSE)
u1<-ecdf(x1)
u1<-sample(ecdf1, 100, replace=FALSE)
u1<-sample(ecdf(x1), 100, replace=FALSE)
u1<-sample(ecdf(x1), 1, replace=FALSE)
ecdf1<-ecdf(x1)
ecdf1
plot(ecdf1)
quantile(ecdf1)
sample(quantile(ecdf1),1000)
sample(quantile(ecdf1),1000)
?knots
knots(ecdf1)
u1<-knots(ecdf1)
plot(sample(u1,1000))
plot(ecdf(sample(u1,1000)))
u1<-knots(ecdf1)
plot(sample(u1,100000))
plot(sample(u1,10))
plot(sample(u1,1000))
plot.ecdf(u1)
plot(sample(u1,1000))
x2<-rbinom(100000)
x2<-rbinom(2,4,0.5)
x2<-rbinom(100000,4,0.5)
ecdf2<-ecdf(x2)
u2<-knots(ecdf2)
plot(sample(u2,1000))
ecdf2<-ecdf(x2)
plot(ecdf2)
plot(ecdf2)
x2<-rgamma(100000, 2)
ecdf2<-ecdf(x2)
plot(ecdf2)
u2<-knots(ecdf2)
plot(sample(u2,1000))
x3<-rexp(100000)
ecdf3<-ecdf(x3)
u3<-knots(ecdf3)
plot(sample(u3,1000))
c1 <- table(replicate(10000, rgeom(1,p)))
c2 <-table(replicate(10000, myattempts(p))
c2 <- as.data.frame(c1)
c2 <- as.data.frame(table(replicate(10000, rgeom(1,p))))
View(c2)
c1 <- as.data.frame(table(replicate(10000, rgeom(1,p))))
c2 <-as.data.frame(table(replicate(10000, myattempts(p)))
View(c2)
View(c2)
View(c1)
df <- left_join(c1, c2, by="Var1")
library(tidyverse)
df <- left_join(c1, c2, by="Var1")
View(df)
colnames(df) <- c("Outcome","rgeom","myattempts")
df <- mutate(df, rgeom=rgeom/10000, myattempts=myattempts/10000)
